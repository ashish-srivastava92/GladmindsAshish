##################################################
# file: productPurchase_client.py
# 
# client stubs generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#     /usr/bin/wsdl2py -b productPurchase.wsdl
# 
##################################################

from productPurchase_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
from ZSI.schema import GED, GTD
import ZSI
from ZSI.generate.pyclass import pyclass_type

# Locator
class productPurchaseLocator:
    productPurchaseSOAP_address = "http://localhost:8000/"
    def getproductPurchaseSOAPAddress(self):
        return productPurchaseLocator.productPurchaseSOAP_address
    def getproductPurchaseSOAP(self, url=None, **kw):
        return productPurchaseSOAPSOAP(url or productPurchaseLocator.productPurchaseSOAP_address, **kw)

# Methods
class productPurchaseSOAPSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: getProductPurchase
    def getProductPurchase(self, request, **kw):
        if isinstance(request, GetProductPurchaseInput) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost:8000/productPurchase/GetProductPurchase", **kw)
        # no output wsaction
        response = self.binding.Receive(GetProductPurchaseOutput.typecode)
        return response

GetProductPurchaseInput = GED("urn:ZSI", "productPurchaseInput").pyclass

GetProductPurchaseOutput = GED("urn:ZSI", "productPurchaseOutput").pyclass
